@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebPortal.Models.UnderTheBridge;
@using WebPortal.DbStuff.Models;

@model CatalogViewModel

@{
    Layout = "UnderTheBridge/Layout";
}
        <main>
            <section>
                <div class="products">
                    
                    @foreach(var guitar in Model.Guitars)
                    {
                        <div class="products-card" onclick="window.location.href='@Url.Action("Detail", "UnderTheBridge", new{ id = guitar.Id})'">
                            <img class="products-card-image" src="~/images/UnderTheBridge/Guitars/@guitar.ImageUrl" alt="IMG/">
                            <h2 class="products-card-name">@guitar.Name</h2>
                            <span class="products-card-price">@guitar.Price$</span>
                            <div class="products-card-box-center">
                                <img class="products-card-icon" src="~/images/UnderTheBridge/Static/star.png">
                                <span class="products-card-reviews">@guitar.Comments.GetMark()</span>
                                <span class="products-card-reviews">(Reviews: @guitar.Comments.GetReviewsAmount())</span>
                            </div>
                            <div class="products-card-box-wide">
                                <button class="products-card-compare"><a href="https://github.com/"><img class="products-card-icon" src="~/images/UnderTheBridge/Static/to-do-list.png"></a></button>
                                <button class="products-card-licked"><a href="https://github.com/"><img class="products-card-icon" src="~/images/UnderTheBridge/Static/heart.png"></a></button>
                                <button class="products-card-cart"><a href="https://github.com/"><img class="products-card-icon" src="~/images/UnderTheBridge/Static/shopping-basket.png"></a></button>
                            </div>
                            @switch (guitar.Status)
                            {
                                case (GuitarEntity.AccessStatus.InShop):
                                    <span class="products-card-status-inShop" >Avalible in shop</span>
                                    break;
                                case (GuitarEntity.AccessStatus.InStock):
                                    <span class="products-card-status-inStock" >Avalible in stock</span>
                                    break;
                                case (GuitarEntity.AccessStatus.No):
                                    <span class="products-card-status-unavailable" >Unavailable</span>
                                    break;
                            }
                        </div>
                    }
                    
                </div>
                @Html.Partial("UnderTheBridge/Pagination")
            </section>
        </main>