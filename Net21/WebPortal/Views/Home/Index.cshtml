@model WebPortal.Models.Home.IndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4 greetings">Welcome @Model.Name [@Model.Id]</h1>
</div>

@if (Model.Jokes != null && Model.Jokes.Any())
{
    <div class="jokes-section">
        <h2 class="text-center mb-4">😄 Случайные шутки</h2>
        <div class="row">
            @foreach (var joke in Model.Jokes)
            {
                <div class="col-md-6 mb-4">
                    <div class="card joke-card">
                        <div class="card-header">
                            <span class="badge badge-primary">@joke.Type</span>
                            <small class="text-muted">ID: @joke.Id</small>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@joke.Setup</h5>
                            <p class="card-text joke-punchline">@joke.Punchline</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div id="weather-container">
    <div id="weather-loading" class="weather-loading">
        <p>🌍 Определяем ваше местоположение...</p>
        <div class="loading-spinner"></div>
    </div>
    
    <div id="weather-error" class="weather-error" style="display: none;">
        <p>❌ Не удалось определить местоположение или получить данные о погоде</p>
        <button onclick="requestWeather()" class="retry-button">🔄 Попробовать снова</button>
    </div>
    
    <div id="weather-widget" class="weather-widget" style="display: none;">
        <h2>🌤️ Текущая погода</h2>
        <div class="weather-info" id="weather-info">
            <!-- Данные будут загружены через JavaScript -->
        </div>
        
        <h3>📊 Прогноз на ближайшие часы</h3>
        <div class="hourly-forecast" id="hourly-forecast">
            <!-- Прогноз будет загружен через JavaScript -->
        </div>
    </div>
</div>

<script>
    function requestWeather() {
        // Показываем загрузку
        document.getElementById('weather-loading').style.display = 'block';
        document.getElementById('weather-error').style.display = 'none';
        document.getElementById('weather-widget').style.display = 'none';
        
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                function(position) {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;
                    
                    // Запрашиваем погоду с сервера
                    fetch(`/Home/GetWeather?latitude=${latitude}&longitude=${longitude}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.error) {
                                showError();
                            } else {
                                displayWeather(data);
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка при получении погоды:', error);
                            showError();
                        });
                },
                function(error) {
                    console.error('Ошибка геолокации:', error);
                    showError();
                },
                {
                    enableHighAccuracy: true,
                    timeout: 10000,
                    maximumAge: 300000 // 5 минут
                }
            );
        } else {
            showError();
        }
    }
    
    function displayWeather(weather) {
        document.getElementById('weather-loading').style.display = 'none';
        document.getElementById('weather-error').style.display = 'none';
        document.getElementById('weather-widget').style.display = 'block';
        
        // Заполняем основную информацию
        const weatherInfo = document.getElementById('weather-info');
        weatherInfo.innerHTML = `
            <div class="weather-item">
                <strong>Температура:</strong> ${weather.current.temperature_2m.toFixed(1)}°C
            </div>
            <div class="weather-item">
                <strong>Скорость ветра:</strong> ${weather.current.wind_speed_10m.toFixed(1)} км/ч
            </div>
            <div class="weather-item">
                <strong>Время обновления:</strong> ${new Date(weather.current.time).toLocaleString('ru-RU')}
            </div>
            <div class="weather-item">
                <strong>Координаты:</strong> ${weather.latitude.toFixed(2)}, ${weather.longitude.toFixed(2)}
            </div>
            <div class="weather-item">
                <strong>Часовой пояс:</strong> ${weather.timezone} (${weather.timezone_abbreviation})
            </div>
        `;
        
        // Заполняем прогноз
        const hourlyForecast = document.getElementById('hourly-forecast');
        let forecastHtml = '';
        const maxHours = Math.min(12, weather.hourly.time.length);
        
        for (let i = 0; i < maxHours; i++) {
            const time = new Date(weather.hourly.time[i]);
            forecastHtml += `
                <div class="hourly-item">
                    <div class="time">${time.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'})}</div>
                    <div class="temp">${Math.round(weather.hourly.temperature_2m[i])}°C</div>
                    <div class="humidity">💧 ${weather.hourly.relative_humidity_2m[i]}%</div>
                    <div class="wind">💨 ${Math.round(weather.hourly.wind_speed_10m[i])} км/ч</div>
                </div>
            `;
        }
        
        hourlyForecast.innerHTML = forecastHtml;
    }
    
    function showError() {
        document.getElementById('weather-loading').style.display = 'none';
        document.getElementById('weather-error').style.display = 'block';
        document.getElementById('weather-widget').style.display = 'none';
    }
    
    // Запускаем запрос погоды при загрузке страницы
    document.addEventListener('DOMContentLoaded', function() {
        requestWeather();
    });
</script>